{"version":3,"sources":["components/logo.svg","constants/constants.js","modules/contracts/actions.js","modules/contracts/saga.js","modules/saga.js","modules/contracts/reducers.js","modules/reducer.js","modules/index.js","components/HeaderView.js","components/ContractsTableView.js","components/MainPageView.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONTRACTS_DB_URI","COINAPI_URI","concat","setContractsRequest","createAction","fetchContractsRequest","setCoinApiRequest","fetchCoinApiRequest","requestContractsWatcher","contractsWatcher","requestCoinApiWatcher","coinApiWatcher","data","regenerator_default","a","wrap","_context","prev","next","call","axios","get","sent","put","t0","console","error","stop","_marked","this","_context2","takeEvery","_marked2","_context3","_marked3","_context4","_marked4","rootSaga","all","saga_marked","contracts","handleActions","_handleActions","Object","defineProperty","state","_ref","payload","objectSpread","contractsData","_ref2","coinApiData","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","HeaderView","react_default","createElement","className","src","logo","alt","ContractsTable","Fragment","reactstrap_es","dark","striped","borderless","hover","length","map","item","index","key","user","name","surname","scope","amountInUsd","currency","date","MainPageView","chartData","src_components_HeaderView","react_chartjs_2_es","components_ContractsTableView","MainPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","_this$props","_this$props$coinApiDa","sortedData","symbol_id","time_exchange","time_coinapi","ask_price","ask_size","bid_price","bid_size","sort","b","monthNames","chartLabels","Date","getMonth","chartDatasetsData","labels","datasets","label","asset_id_base","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","components_MainPageView","Component","connect","App","react_redux_es","containers_MainPage","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a684278.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const JSON_SERVER_URI = 'http://localhost:4000';\nexport const CONTRACTS_DB_URI = '/db.json'; // In a production version tha call will be directly to db.\n                                            // The call to mocked DB is made to have ability\n                                            // to test this app on remote server without setting it\nexport const API_KEY = '8E38EABE-532A-4269-AA76-120EB4BDBCD6';\nexport const API_KEY2 = '55537FA1-D313-48DA-9E60-9135050457E5';\nexport const COINAPI_URI = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_ETH_USD/history?apikey=${API_KEY}&period_id=1MIN&time_start=2018-01-01T00:00:00`;","import { createAction } from 'redux-actions';\n\nexport const setContractsRequest = createAction('SET_CONTRACTS_REQUEST');\nexport const fetchContractsRequest = createAction('FETCH_CONTRACTS_REQUEST');\n\nexport const setCoinApiRequest = createAction('SET_COIN_API_REQUEST');\nexport const fetchCoinApiRequest = createAction('FETCH_COIN_API_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {CONTRACTS_DB_URI, COINAPI_URI} from '../../constants/constants'\n\nimport {\n  setContractsRequest,\n  fetchContractsRequest,\n  setCoinApiRequest,\n  fetchCoinApiRequest,\n} from './actions';\n\nfunction* requestContractsWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(CONTRACTS_DB_URI);\n    });\n    yield put(fetchContractsRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsWatcher() {\n  yield takeEvery(setContractsRequest, requestContractsWatcher);\n}\n\n\nfunction* requestCoinApiWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(COINAPI_URI);\n    });\n    yield put(fetchCoinApiRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* coinApiWatcher() {\n  yield takeEvery(setCoinApiRequest, requestCoinApiWatcher);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { contractsWatcher, coinApiWatcher } from './contracts/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    contractsWatcher(),\n    coinApiWatcher(),\n  ]);\n}\n","import { handleActions } from 'redux-actions';\nimport { fetchContractsRequest, fetchCoinApiRequest } from './actions';\n\nconst defaultState = {\n  contractsData: {},\n  coinApiData: {},\n};\n\nconst contracts = handleActions(\n  {\n    [fetchContractsRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        contractsData: payload.data.contracts,\n      };\n    },\n    [fetchCoinApiRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        coinApiData: payload.data,\n      };\n    },\n  },\n  defaultState,\n);\n\nexport default contracts;","import { combineReducers } from 'redux';\n\nimport contracts from './contracts/reducers';\n\nexport default combineReducers({\n  contracts,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './saga';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(rootReducer, {}, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './HeaderView.css';\n\nconst HeaderView = () => (\n  <header className=\"header\">\n    <img src={logo} className=\"header-logo\" alt=\"logo\"/>\n    <p>\n      Welcome to React CRUD App\n    </p>\n  </header>\n);\n\nexport default HeaderView;","import React from 'react';\nimport { Row, Col, Table } from 'reactstrap';\n\nimport './ContractsTableView.css';\n\nconst getTableInfoRows = (data) => (data.length) && data.map((item, index) => (\n  <tr key={`${index}_${item.user.name}_${item.user.surname}`}>\n    <th scope=\"row\">{index}</th>\n    <td>{item.user.name} {item.user.surname}</td>\n    <td>{item.amountInUsd}</td>\n    <td>{item.currency}</td>\n    <td>{item.date}</td>\n  </tr>\n));\n\nconst ContractsTable = ({ contracts }) => (\n  <>\n  <Row>\n    <Col>\n      <h1 className=\"contracts-table__header text-center my-2\">Contracts list</h1>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n      <Table dark striped borderless hover>\n        <thead>\n        <tr>\n          <th>#</th>\n          <td>User name</td>\n          <td>Amount in USD</td>\n          <td>Currency</td>\n          <td>Date</td>\n        </tr>\n        </thead>\n        <tbody>\n\n        {getTableInfoRows(contracts)}\n\n        </tbody>\n      </Table>\n    </Col>\n  </Row>\n  </>\n);\n\nexport default ContractsTable;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport HeaderView from './HeaderView';\nimport ContractsTableView from './ContractsTableView';\n\nconst MainPageView = ({ chartData, contracts }) => (\n  <>\n  <HeaderView />\n\n  <main className=\"mt-4\">\n    <Container>\n      <Row>\n        <Col>\n          <Line data={chartData}/>\n        </Col>\n      </Row>\n\n      <ContractsTableView contracts={contracts}/>\n    </Container>\n  </main>\n  </>\n);\n\nexport default MainPageView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsRequest, setCoinApiRequest } from '../modules/contracts/actions';\n\nimport MainPageView from '../components/MainPageView';\n\nexport class MainPage extends Component {\n  componentWillMount() {\n    this.props.setContractsRequest();\n    this.props.setCoinApiRequest();\n  }\n\n  render() {\n    const { contracts, coinApiData = [] } = this.props;\n\n    const foo = [\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 345,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 123,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 987,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-06-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 760,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-05-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 349,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-07-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 333,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 444,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 567,\n        \"bid_size\": 124\n      }\n    ];\n    const sortedData = foo.sort((a, b) => (\n      (a.time_coinapi < b.time_coinapi) ? -1 : (a.time_coinapi > b.time_coinapi) ? 1 : 0\n    ));\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December' ];\n    const chartLabels = sortedData.map(data => monthNames[ new Date(data.time_coinapi).getMonth() ]);\n    const chartDatasetsData = sortedData.map(data => data.bid_price);\n    const chartDatasetsLabel = (coinApiData.asset_id_base) ? `The rates for ${coinApiData.asset_id_base} currency` : `The rates chart`;\n\n    const chartData = {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: chartDatasetsLabel,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(97, 218, 251,0.4)',\n          borderColor: 'rgba(97, 218, 251,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(97, 218, 251,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(97, 218, 251,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: chartDatasetsData,\n        }\n      ]\n    };\n\n    return <MainPageView chartData={chartData} contracts={contracts} />;\n  }\n}\n\nexport default connect(\n  state => ({\n    contracts: state.contracts.contractsData,\n    coinApiData: state.contracts.coinApiData,\n  }),\n  { setContractsRequest, setCoinApiRequest }\n)(MainPage);","import React, { Component } from 'react';\nimport store from './modules';\nimport { Provider } from 'react-redux';\n\nimport MainPage from './containers/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}