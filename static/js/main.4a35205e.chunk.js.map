{"version":3,"sources":["components/logo.svg","firebase/firebase.js","firebase/db.js","modules/contracts/actions.js","modules/contracts/saga.js","constants/constants.js","modules/coinApi/actions.js","modules/coinApi/saga.js","modules/saga.js","modules/contracts/reducers.js","modules/coinApi/reducers.js","modules/reducer.js","modules/index.js","components/HeaderView.js","components/ContractsTableView.js","containers/ContractsTable.js","components/AddNewContractView.js","containers/AddNewContract.js","components/MainPageView.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","doCreateContract","_ref","id","userName","userSurname","amountInUsd","currency","date","ref","concat","set","user","name","surname","onceGetContract","once","doDeleteContract","remove","setContractsRequest","createAction","fetchContractsRequest","setContractsNewEntry","fetchContractsNewEntry","setContractsDeleteEntry","fetchContractsDeleteEntry","requestContractsWatcher","contractsWatcher","addContractsNewEntryWatcher","contractsNewEntryWatcher","deleteContractEntryWatcher","contractsDeleteEntryWatcher","data","regenerator_default","a","wrap","_context","prev","next","call","then","snapshot","val","sent","put","t0","console","error","stop","_marked","this","_context2","takeEvery","_marked2","newEntryData","_args3","arguments","_context3","undefined","payload","_marked3","_context4","_marked4","dataToDelete","_args5","_context5","_marked5","_context6","_marked6","COINAPI_URI","setCoinApiRequest","fetchCoinApiRequest","requestCoinApiWatcher","coinApiWatcher","axios","get","saga_marked","saga_marked2","rootSaga","all","modules_saga_marked","contractsReducer","handleActions","_handleActions","Object","defineProperty","state","objectSpread","contractsData","contractsDataNewEntry","contractsDataToDeleteId","coinApiReducer","coinApiData","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","HeaderView","react_default","createElement","className","src","logo","alt","ContractsTableView","contracts","deleteHandler","Fragment","reactstrap_es","dark","striped","borderless","hover","handler","rows","keys","map","item","index","push","key","dir","scope","color","onClick","getTableInfoRows","ContractsTable","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","props","_this","src_components_ContractsTableView","Component","connect","fromContractsReducer","getContractsData","AddNewContractView","submitHandler","inputChangeHandler","onSubmit","form","md","for","type","placeholder","onChange","AddNewContract","_getPrototypeOf2","_len","args","Array","_key","e","_e$target","target","setState","addNewContractHandler","preventDefault","Math","round","random","components_AddNewContractView","MainPageView","chartData","src_components_HeaderView","react_chartjs_2_es","containers_AddNewContract","containers_ContractsTable","MainPage","getChartData","monthNames","sortedData","sort","b","time_coinapi","chartLabels","Date","getMonth","chartDatasetsData","bid_price","labels","datasets","label","asset_id_base","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","components_MainPageView","symbol_id","time_exchange","ask_price","ask_size","bid_size","fromCoinApiReducer","getCoinApiData","App","react_redux_es","containers_MainPage","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qfCYnCC,IAASC,KAAKC,QACjBF,IAASG,cAVI,CACbC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,iBAOrB,IAAMC,EAAKV,IAASW,WCdPC,EAAmB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,SAAUC,EAAjBH,EAAiBG,YAAaC,EAA9BJ,EAA8BI,YAAaC,EAA3CL,EAA2CK,SAAUC,EAArDN,EAAqDM,KAArD,OAC9BT,EAAGU,IAAH,aAAAC,OAAoBP,IAAMQ,IAAI,CAC5BR,KACAS,KAAM,CACJC,KAAMT,EACNU,QAAST,GAEXC,cACAC,WACAC,UAGSO,EAAkB,kBAAMhB,EAAGU,IAAI,aAAaO,KAAK,UAEjDC,EAAmB,SAACd,GAAD,OAAQJ,EAAGU,IAAH,aAAAC,OAAoBP,IAAMe,mBCdrDC,EAAsBC,YAAa,yBACnCC,EAAwBD,YAAa,2BAErCE,EAAuBF,YAAa,2BACpCG,EAAyBH,YAAa,6BAEtCI,EAA0BJ,YAAa,8BACvCK,EAA4BL,YAAa,2CCG5CM,cASOC,cAIPC,cASOC,cAIPC,cASOC,GAnCjB,SAAUL,IAAV,IAAAM,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,YAAK,kBAAMxC,EAAGgB,kBAAkByB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFjF,OAGI,OADMV,EAFVI,EAAAO,KAAAP,EAAAE,KAAA,EAGUM,YAAIvB,EAAsBW,IAHpC,OAAAI,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAKIU,QAAQC,MAARX,EAAAS,IALJ,yBAAAT,EAAAY,SAAAC,EAAAC,KAAA,SASO,SAAUvB,IAAV,OAAAM,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACL,OADKa,EAAAb,KAAA,EACCc,YAAUjC,EAAqBO,GADhC,wBAAAyB,EAAAH,SAAAK,EAAAH,MAIP,SAAUtB,IAAV,IAAA0B,EAAAtB,EAAAuB,EAAAC,UAAA,OAAAvB,EAAAC,EAAAC,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,OAEiB,OAFqBgB,EAAtCC,EAAAhE,OAAA,QAAAmE,IAAAH,EAAA,GAAAA,EAAA,GAAqD,GAArDE,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEuBC,YAAK,kBAAMxC,EAAGE,iBAAiBqD,EAAaK,WAFnE,OAGI,OADM3B,EAFVyB,EAAAd,KAAAc,EAAAnB,KAAA,EAGUM,YAAIrB,EAAuBS,IAHrC,OAAAyB,EAAAnB,KAAA,gBAAAmB,EAAApB,KAAA,EAAAoB,EAAAZ,GAAAY,EAAA,SAKIX,QAAQC,MAARU,EAAAZ,IALJ,yBAAAY,EAAAT,SAAAY,EAAAV,KAAA,SASO,SAAUrB,IAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACL,OADKuB,EAAAvB,KAAA,EACCc,YAAU9B,EAAsBM,GADjC,wBAAAiC,EAAAb,SAAAc,EAAAZ,MAIP,SAAUpB,IAAV,IAAAiC,EAAA/B,EAAAgC,EAAAR,UAAA,OAAAvB,EAAAC,EAAAC,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OAEiB,OAFoByB,EAArCC,EAAAzE,OAAA,QAAAmE,IAAAM,EAAA,GAAAA,EAAA,GAAoD,GAApDC,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEuBC,YAAK,kBAAMxC,EAAGkB,iBAAiB8C,EAAaJ,WAFnE,OAGI,OADM3B,EAFViC,EAAAtB,KAAAsB,EAAA3B,KAAA,EAGUM,YAAInB,EAA0BO,IAHxC,OAAAiC,EAAA3B,KAAA,gBAAA2B,EAAA5B,KAAA,EAAA4B,EAAApB,GAAAoB,EAAA,SAKInB,QAAQC,MAARkB,EAAApB,IALJ,yBAAAoB,EAAAjB,SAAAkB,EAAAhB,KAAA,SASO,SAAUnB,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OACL,OADK6B,EAAA7B,KAAA,EACCc,YAAU5B,EAAyBM,GADpC,wBAAAqC,EAAAnB,SAAAoB,EAAAlB,4BCxCA,IAEMmB,EAAW,yEAAA3D,OAFD,uCAEC,kDCPX4D,EAAoBlD,YAAa,wBACjCmD,EAAsBnD,YAAa,qCCOtCoD,cAWOC,GAXjB,SAAUD,IAAV,IAAAxC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,YAAK,WACtB,OAAOmC,IAAMC,IAAIN,KAHvB,OAKI,OAHMrC,EAFVI,EAAAO,KAAAP,EAAAE,KAAA,EAKUM,YAAI2B,EAAoBvC,IALlC,OAAAI,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAOIU,QAAQC,MAARX,EAAAS,IAPJ,yBAAAT,EAAAY,SAAA4B,EAAA1B,KAAA,SAWO,SAAUuB,IAAV,OAAAxC,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACL,OADKa,EAAAb,KAAA,EACCc,YAAUkB,EAAmBE,GAD9B,wBAAArB,EAAAH,SAAA6B,EAAA3B,qBChBkB4B,IAAV,SAAUA,KAAV,OAAA7C,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPyC,YAAI,CACRpD,IACAE,IACAE,IACA0C,MALW,wBAAArC,EAAAY,SAAAgC,EAAA9B,yCCIT+B,GAAmBC,cAAaC,GAAA,GAAAC,OAAAC,GAAA,EAAAD,CAAAD,GAEjC9D,EAAwB,SAACiE,EAADpF,GAAwB,IAAdyD,EAAczD,EAAdyD,QACjC,OAAOyB,OAAAG,GAAA,EAAAH,CAAA,GACFE,EADL,CAEEE,cAAe7B,MALeyB,OAAAC,GAAA,EAAAD,CAAAD,GAQjC5D,EAAyB,SAAC+D,EAAO3B,GAChC,OAAOyB,OAAAG,GAAA,EAAAH,CAAA,GACFE,EADL,CAEEG,sBAAuB9B,MAXOyB,OAAAC,GAAA,EAAAD,CAAAD,GAcjC1D,EAA4B,SAAC6D,EAAO3B,GACnC,OAAOyB,OAAAG,GAAA,EAAAH,CAAA,GACFE,EADL,CAEEI,wBAAyB/B,MAjBKwB,IANjB,CACnBK,cAAe,GACfC,sBAAuB,GACvBC,wBAAyB,KA8BZT,MC7BTU,GAAiBT,aAAcE,OAAAC,GAAA,EAAAD,CAAA,GAEhCb,EAAsB,SAACe,EAADpF,GAAwB,IAAdyD,EAAczD,EAAdyD,QAC/B,OAAOyB,OAAAG,GAAA,EAAAH,CAAA,GACFE,EADL,CAEEM,YAAajC,EAAQ3B,SATR,CACnB4D,YAAa,KAkBAD,MCZAE,eAAgB,CAC7BZ,oBACAU,oBCNIG,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAiBC,cACjBC,GAAWN,GAAiBO,YAAgBH,KAC5CI,GAAQC,YAAYC,GAAa,GAAIJ,IAE3CF,GAAeO,IAAI3B,IAEJwB,0DCCAI,WATI,kBACjBC,EAAAzE,EAAA0E,cAAA,UAAQC,UAAU,UAChBF,EAAAzE,EAAA0E,cAAA,OAAKE,IAAKC,KAAMF,UAAU,cAAcG,IAAI,SAC5CL,EAAAzE,EAAA0E,cAAA,yCCmDWK,WA5BY,SAAA/G,GAAA,IAAGgH,EAAHhH,EAAGgH,UAAWC,EAAdjH,EAAciH,cAAd,OACzBR,EAAAzE,EAAA0E,cAAAD,EAAAzE,EAAAkF,SAAA,KACAT,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAAA,MAAIC,UAAU,4CAAd,oBAGJF,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOC,MAAI,EAACC,SAAO,EAACC,YAAU,EAACC,OAAK,GAClCd,EAAAzE,EAAA0E,cAAA,aACAD,EAAAzE,EAAA0E,cAAA,UACED,EAAAzE,EAAA0E,cAAA,eACAD,EAAAzE,EAAA0E,cAAA,uBACAD,EAAAzE,EAAA0E,cAAA,2BACAD,EAAAzE,EAAA0E,cAAA,sBACAD,EAAAzE,EAAA0E,cAAA,oBAGFD,EAAAzE,EAAA0E,cAAA,aA7CiB,WAAwB,IAAvB5E,EAAuBwB,UAAAjE,OAAA,QAAAmE,IAAAF,UAAA,GAAAA,UAAA,GAAhB,GAAIkE,EAAYlE,UAAAjE,OAAA,EAAAiE,UAAA,QAAAE,EAC3CiE,EAAO,GAsBX,OArBCvC,OAAOwC,KAAK5F,GAAMzC,QAAW6F,OAAOwC,KAAK5F,GAAM6F,IAAI,SAACC,EAAMC,GAAP,OAClDJ,EAAKK,KACHrB,EAAAzE,EAAA0E,cAAA,MAAIqB,IAAG,GAAAvH,OAAKqH,EAAL,KAAArH,OAAcsB,EAAM8F,GAAOlH,KAAKC,KAAhC,KAAAH,OAAwCsB,EAAM8F,GAAOlH,KAAKE,UAC9DgC,QAAQoF,IAAIlG,EAAM8F,IACnBnB,EAAAzE,EAAA0E,cAAA,MAAIuB,MAAM,OAAOnG,EAAM8F,GAAO3H,IAC9BwG,EAAAzE,EAAA0E,cAAA,UAAK5E,EAAM8F,GAAOlH,KAAKC,KAAvB,IAA8BmB,EAAM8F,GAAOlH,KAAKE,SAChD6F,EAAAzE,EAAA0E,cAAA,UAAK5E,EAAM8F,GAAOxH,aAClBqG,EAAAzE,EAAA0E,cAAA,UAAK5E,EAAM8F,GAAOvH,UAClBoG,EAAAzE,EAAA0E,cAAA,UAAK5E,EAAM8F,GAAOtH,MAClBmG,EAAAzE,EAAA0E,cAAA,UACED,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEe,MAAM,OACNvB,UAAU,QACVwB,QAAS,kBAAMX,EAAQ1F,EAAM8F,GAAO3H,MAHtC,wBAWDwH,EAuBAW,CAAiBpB,EAAWC,UC3CxBoB,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAnD,OAAAqD,EAAA,EAAArD,CAAAlC,KAAAqF,GAAAnD,OAAAsD,EAAA,EAAAtD,CAAAlC,KAAAkC,OAAAuD,EAAA,EAAAvD,CAAAmD,GAAAK,MAAA1F,KAAAM,YAAA,OAAA4B,OAAAyD,EAAA,EAAAzD,CAAAmD,EAAAC,GAAApD,OAAA0D,EAAA,EAAA1D,CAAAmD,EAAA,EAAAN,IAAA,oBAAAc,MAAA,WAEI7F,KAAK8F,MAAM7H,wBAFf,CAAA8G,IAAA,SAAAc,MAAA,WAKW,IAAAE,EAAA/F,KACP,OACEyD,EAAAzE,EAAA0E,cAACsC,GAAD,CACEhC,UAAWhE,KAAK8F,MAAMxD,cACtB2B,cAAe,SAAAhH,GAAE,OAAI8I,EAAKD,MAAMxH,wBAAwBrB,UAThEoI,EAAA,CAAoCY,aAerBC,gBACb,SAAA9D,GAAK,MAAK,CACRE,cJlB4B,SAAAF,GAAK,OF2BL,SAAAA,GAAK,OAAIA,EAAML,iBAAiBO,cE3BvB6D,CAAsC/D,GIkB5DgE,CAAiBhE,KAElC,CAAEnE,sBAAqBK,2BAJV4H,CAKbb,ICiEagB,GA1FY,SAAArJ,GAA2C,IAAxCsJ,EAAwCtJ,EAAxCsJ,cAAeC,EAAyBvJ,EAAzBuJ,mBAC3C,OACE9C,EAAAzE,EAAA0E,cAAAD,EAAAzE,EAAAkF,SAAA,KACAT,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAAA,MAAIC,UAAU,4CAAd,sBAIJF,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAMR,UAAU,OAAO6C,SAAUF,GAC/B7C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKsC,MAAI,GACPhD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,GACPjD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOwC,IAAI,YAAX,aACAlD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEyC,KAAK,OACLjJ,KAAK,WACLV,GAAG,WACH4J,YAAY,OACZC,SAAUP,MAIhB9C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,GACPjD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOwC,IAAI,eAAX,gBACAlD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEyC,KAAK,OACLjJ,KAAK,cACLV,GAAG,cACH4J,YAAY,UACZC,SAAUP,MAIhB9C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,GACPjD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOwC,IAAI,eAAX,iBACAlD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEyC,KAAK,OACLjJ,KAAK,cACLV,GAAG,cACH4J,YAAY,IACZC,SAAUP,MAIhB9C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,GACPjD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOwC,IAAI,YAAX,YACAlD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEyC,KAAK,OACLjJ,KAAK,WACLV,GAAG,WACH4J,YAAY,MACZC,SAAUP,MAIhB9C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,GACPjD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAOwC,IAAI,QAAX,QACAlD,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEyC,KAAK,OACLjJ,KAAK,OACLV,GAAG,OACH4J,YAAY,aACZC,SAAUP,MAIhB9C,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKuC,GAAI,EAAG/C,UAAU,0BACpBF,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CACEe,MAAM,OACNvB,UAAU,aACViD,KAAK,UAHP,uBCtEDG,GAAb,SAAAzB,GAAA,SAAAyB,IAAA,IAAAC,EAAAjB,EAAA7D,OAAAqD,EAAA,EAAArD,CAAAlC,KAAA+G,GAAA,QAAAE,EAAA3G,UAAAjE,OAAA6K,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA9G,UAAA8G,GAAA,OAAArB,EAAA7D,OAAAsD,EAAA,EAAAtD,CAAAlC,MAAAgH,EAAA9E,OAAAuD,EAAA,EAAAvD,CAAA6E,IAAA1H,KAAAqG,MAAAsB,EAAA,CAAAhH,MAAAxC,OAAA0J,MACE9E,MAAQ,CACNlF,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,SAAU,GACVC,KAAM,IANVyI,EASEQ,mBAAqB,SAAAc,GAAK,IAAAC,EACAD,EAAEE,OAAlB5J,EADgB2J,EAChB3J,KAAMkI,EADUyB,EACVzB,MAEdE,EAAKyB,SAALtF,OAAAC,GAAA,EAAAD,CAAA,GACGvE,EAAOkI,KAbdE,EAiBE0B,sBAAwB,SAAAJ,GACtBA,EAAEK,iBACF,IAAMzK,EAAK0K,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3B9B,EAAKD,MAAM1H,qBAAX8D,OAAAG,GAAA,EAAAH,CAAA,GAAqC6D,EAAK3D,MAA1C,CAAiDnF,SApBrD8I,EAAA,OAAA7D,OAAAyD,EAAA,EAAAzD,CAAA6E,EAAAzB,GAAApD,OAAA0D,EAAA,EAAA1D,CAAA6E,EAAA,EAAAhC,IAAA,SAAAc,MAAA,WAwBI,OACEpC,EAAAzE,EAAA0E,cAACoE,GAAD,CACExB,cAAetG,KAAKyH,sBACpBlB,mBAAoBvG,KAAKuG,yBA3BjCQ,EAAA,CAAoCd,aAiCrBC,gBACb,KACA,CAAE9H,wBAFW8H,CAGba,ICfagB,GApBM,SAAA/K,GAAA,IAAGgL,EAAHhL,EAAGgL,UAAH,OACnBvE,EAAAzE,EAAA0E,cAAAD,EAAAzE,EAAAkF,SAAA,KACAT,EAAAzE,EAAA0E,cAACuE,GAAD,MAEAxE,EAAAzE,EAAA0E,cAAA,QAAMC,UAAU,QACdF,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,CAAKR,UAAU,QACbF,EAAAzE,EAAA0E,cAACS,GAAA,EAAD,KACEV,EAAAzE,EAAA0E,cAACwE,GAAA,EAAD,CAAMpJ,KAAMkJ,MAIhBvE,EAAAzE,EAAA0E,cAACyE,GAAD,MAEA1E,EAAAzE,EAAA0E,cAAC0E,GAAD,UCdOC,GAAb,SAAA/C,GAAA,SAAA+C,IAAA,IAAArB,EAAAjB,EAAA7D,OAAAqD,EAAA,EAAArD,CAAAlC,KAAAqI,GAAA,QAAApB,EAAA3G,UAAAjE,OAAA6K,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA9G,UAAA8G,GAAA,OAAArB,EAAA7D,OAAAsD,EAAA,EAAAtD,CAAAlC,MAAAgH,EAAA9E,OAAAuD,EAAA,EAAAvD,CAAAmG,IAAAhJ,KAAAqG,MAAAsB,EAAA,CAAAhH,MAAAxC,OAAA0J,MAKEoB,aAAe,WAAe,IAAdxJ,EAAcwB,UAAAjE,OAAA,QAAAmE,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACfiI,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEIC,EAAa1J,EAAK2J,KAAK,SAACzJ,EAAG0J,GAAJ,OAC1B1J,EAAE2J,aAAeD,EAAEC,cAAiB,EAAK3J,EAAE2J,aAAeD,EAAEC,aAAgB,EAAI,IAG7EC,EAAcJ,EAAW7D,IAAI,SAAA7F,GAAI,OAAIyJ,EAAY,IAAIM,KAAK/J,EAAK6J,cAAcG,cAC7EC,EAAoBP,EAAW7D,IAAI,SAAA7F,GAAI,OAAIA,EAAKkK,YA8BtD,MA3BkB,CAChBC,OAAQL,EACRM,SAAU,CACR,CACEC,MANsBrK,EAAKsK,cAAN,iBAAA5L,OAAwCsB,EAAKsK,cAA7C,+BAOrBC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,uBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,uBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,uBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBvL,KAAMiK,MAlDhBhD,EAAA,OAAA7D,OAAAyD,EAAA,EAAAzD,CAAAmG,EAAA/C,GAAApD,OAAA0D,EAAA,EAAA1D,CAAAmG,EAAA,EAAAtD,IAAA,oBAAAc,MAAA,WAEI7F,KAAK8F,MAAM1E,sBAFf,CAAA2D,IAAA,SAAAc,MAAA,WAqII,OACEpC,EAAAzE,EAAA0E,cAAA,WACED,EAAAzE,EAAA0E,cAAC4G,GAAD,CAActC,UAAWhI,KAAKsI,aA5ER,CACxB,CACEiC,UAAa,wBACbC,cAAiB,+BACjB7B,aAAgB,+BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,8BACjB7B,aAAgB,8BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,+BACjB7B,aAAgB,+BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,8BACjB7B,aAAgB,8BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,+BACjB7B,aAAgB,+BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,8BACjB7B,aAAgB,8BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,+BACjB7B,aAAgB,+BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,KAEd,CACEJ,UAAa,wBACbC,cAAiB,8BACjB7B,aAAgB,8BAChB8B,UAAa,IACbC,SAAY,KACZ1B,UAAa,IACb2B,SAAY,cAlIpBtC,EAAA,CAA8BpC,aA6IfC,gBACb,SAAA9D,GAAK,MAAK,CACRM,YR/I0B,SAAAN,GAAK,ODYL,SAAAA,GAAK,OAAIA,EAAMK,eAAeC,YCZrBkI,CAAkCxI,GQ+IxDyI,CAAezI,KAE9B,CAAEhB,qBAJW8E,CAKbmC,IC1IayC,oLARX,OACErH,EAAAzE,EAAA0E,cAACqH,GAAA,EAAD,CAAU3H,MAAOA,IACfK,EAAAzE,EAAA0E,cAACsH,GAAD,cAJU/E,aCMEgF,QACW,cAA7BpI,OAAOqI,SAASC,UAEe,UAA7BtI,OAAOqI,SAASC,UAEhBtI,OAAOqI,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO7H,EAAAzE,EAAA0E,cAAC6H,EAAA,EAAD,CAAQC,SAAUC,aAAwBhI,EAAAzE,EAAA0E,cAACgI,GAAD,OAAkBC,SAASC,eAAe,SDuH9F,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzM,KAAK,SAAA0M,GACjCA,EAAaC","file":"static/js/main.4a35205e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCN1JBRTOM5bw8QMLpF5wZF00IdwQwrKoA\",\n  authDomain: \"polaris327-crud-application.firebaseapp.com\",\n  databaseURL: \"https://polaris327-crud-application.firebaseio.com\",\n  projectId: \"polaris327-crud-application\",\n  storageBucket: \"polaris327-crud-application.appspot.com\",\n  messagingSenderId: \"715090132651\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\n\nexport {\n  db,\n};\n","import { db } from './firebase';\n\nexport const doCreateContract = ({ id, userName, userSurname, amountInUsd, currency, date }) =>\n  db.ref(`contracts/${id}`).set({\n    id,\n    user: {\n      name: userName,\n      surname: userSurname\n    },\n    amountInUsd,\n    currency,\n    date\n  });\n\nexport const onceGetContract = () => db.ref('contracts').once('value');\n\nexport const doDeleteContract = (id) => db.ref(`contracts/${id}`).remove();\n","import { createAction } from 'redux-actions';\n\nexport const setContractsRequest = createAction('SET_CONTRACTS_REQUEST');\nexport const fetchContractsRequest = createAction('FETCH_CONTRACTS_REQUEST');\n\nexport const setContractsNewEntry = createAction('SET_CONTRACTS_NEW_ENTRY');\nexport const fetchContractsNewEntry = createAction('FETCH_CONTRACTS_NEW_ENTRY');\n\nexport const setContractsDeleteEntry = createAction('SET_CONTRACTS_DELETE_ENTRY');\nexport const fetchContractsDeleteEntry = createAction('FETCH_CONTRACTS_DELETE_ENTRY');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { db } from '../../firebase';\n\nimport {\n  setContractsRequest,\n  fetchContractsRequest,\n  setContractsNewEntry,\n  fetchContractsNewEntry,\n  setContractsDeleteEntry,\n  fetchContractsDeleteEntry,\n} from './actions';\n\nfunction* requestContractsWatcher() {\n  try {\n    const data = yield call(() => db.onceGetContract().then(snapshot => snapshot.val()));\n    yield put(fetchContractsRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsWatcher() {\n  yield takeEvery(setContractsRequest, requestContractsWatcher);\n}\n\nfunction* addContractsNewEntryWatcher(newEntryData = {}) {\n  try {\n    const data = yield call(() => db.doCreateContract(newEntryData.payload));\n    yield put(fetchContractsNewEntry(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsNewEntryWatcher() {\n  yield takeEvery(setContractsNewEntry, addContractsNewEntryWatcher);\n}\n\nfunction* deleteContractEntryWatcher(dataToDelete = '') {\n  try {\n    const data = yield call(() => db.doDeleteContract(dataToDelete.payload));\n    yield put(fetchContractsDeleteEntry(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsDeleteEntryWatcher() {\n  yield takeEvery(setContractsDeleteEntry, deleteContractEntryWatcher);\n}\n","// In a production version tha call will be directly to db.\n// The call to mocked DB is made to have ability to test this app on remote server without setting it\nexport let CONTRACTS_DB_URI = '/db.json';\nif (process.env.NODE_ENV === 'production') {\n  CONTRACTS_DB_URI = '/crud-app/db.json';\n}\n\nexport const API_KEY = '8E38EABE-532A-4269-AA76-120EB4BDBCD6';\nexport const API_KEY2 = '55537FA1-D313-48DA-9E60-9135050457E5';\nexport const COINAPI_URI = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_ETH_USD/history?apikey=${API_KEY}&period_id=1MIN&time_start=2018-01-01T00:00:00`;","import { createAction } from 'redux-actions';\n\nexport const setCoinApiRequest = createAction('SET_COIN_API_REQUEST');\nexport const fetchCoinApiRequest = createAction('FETCH_COIN_API_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {COINAPI_URI} from '../../constants/constants'\n\nimport {\n  setCoinApiRequest,\n  fetchCoinApiRequest,\n} from './actions';\n\nfunction* requestCoinApiWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(COINAPI_URI);\n    });\n    yield put(fetchCoinApiRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* coinApiWatcher() {\n  yield takeEvery(setCoinApiRequest, requestCoinApiWatcher);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { contractsWatcher, contractsNewEntryWatcher, contractsDeleteEntryWatcher } from './contracts/saga';\nimport { coinApiWatcher } from './coinApi/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    contractsWatcher(),\n    contractsNewEntryWatcher(),\n    contractsDeleteEntryWatcher(),\n    coinApiWatcher(),\n  ]);\n}\n","import { handleActions } from 'redux-actions';\nimport { fetchContractsRequest, fetchContractsNewEntry, fetchContractsDeleteEntry } from './actions';\n\nconst defaultState = {\n  contractsData: {},\n  contractsDataNewEntry: {},\n  contractsDataToDeleteId: '',\n};\n\nconst contractsReducer = handleActions(\n  {\n    [fetchContractsRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        contractsData: payload,\n      };\n    },\n    [fetchContractsNewEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataNewEntry: payload,\n      };\n    },\n    [fetchContractsDeleteEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataToDeleteId: payload,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getContractsData = state => state.contractsReducer.contractsData;\n\nexport default contractsReducer;","import { handleActions } from 'redux-actions';\nimport { fetchCoinApiRequest } from './actions';\n\nconst defaultState = {\n  coinApiData: {},\n};\n\nconst coinApiReducer = handleActions(\n  {\n    [fetchCoinApiRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        coinApiData: payload.data,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getCoinApiData = state => state.coinApiReducer.coinApiData;\n\nexport default coinApiReducer;","import { combineReducers } from 'redux';\n\n// Reducers\nimport contractsReducer, * as fromContractsReducer from './contracts/reducers';\nimport coinApiReducer, * as fromCoinApiReducer from './coinApi/reducers';\n\n// Public Selectors\nexport const getContractsData = state => fromContractsReducer.getContractsData(state);\nexport const getCoinApiData = state => fromCoinApiReducer.getCoinApiData(state);\n\nexport default combineReducers({\n  contractsReducer,\n  coinApiReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './saga';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(rootReducer, {}, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './HeaderView.css';\n\nconst HeaderView = () => (\n  <header className=\"header\">\n    <img src={logo} className=\"header-logo\" alt=\"logo\"/>\n    <p>\n      Welcome to React CRUD App\n    </p>\n  </header>\n);\n\nexport default HeaderView;","import React from 'react';\nimport { Row, Col, Table, Button } from 'reactstrap';\n\nimport './ContractsTableView.css';\n\nconst getTableInfoRows = (data = {}, handler) => {\n  let rows = [];\n  (Object.keys(data).length) && Object.keys(data).map((item, index) => (\n    rows.push(\n      <tr key={`${index}_${data[ item ].user.name}_${data[ item ].user.surname}`}>\n        {console.dir(data[ item ])}\n        <th scope=\"row\">{data[ item ].id}</th>\n        <td>{data[ item ].user.name} {data[ item ].user.surname}</td>\n        <td>{data[ item ].amountInUsd}</td>\n        <td>{data[ item ].currency}</td>\n        <td>{data[ item ].date}</td>\n        <td>\n          <Button\n            color=\"info\"\n            className=\"w-100\"\n            onClick={() => handler(data[ item ].id)}\n          >\n            Delete contract\n          </Button>\n        </td>\n      </tr>\n    )\n  ));\n  return rows;\n};\n\nconst ContractsTableView = ({ contracts, deleteHandler }) => (\n  <>\n  <Row>\n    <Col>\n      <h1 className=\"contracts-table__header text-center my-2\">Contracts list</h1>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n      <Table dark striped borderless hover>\n        <thead>\n        <tr>\n          <th>#</th>\n          <td>User name</td>\n          <td>Amount in USD</td>\n          <td>Currency</td>\n          <td>Date</td>\n        </tr>\n        </thead>\n        <tbody>\n        {getTableInfoRows(contracts, deleteHandler)}\n        </tbody>\n      </Table>\n    </Col>\n  </Row>\n  </>\n);\n\nexport default ContractsTableView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsRequest, setContractsDeleteEntry } from '../modules/contracts/actions';\nimport { getContractsData } from '../modules/reducer';\n\nimport ContractsTableView from '../components/ContractsTableView';\n\nexport class ContractsTable extends Component {\n  componentDidMount() {\n    this.props.setContractsRequest();\n  }\n\n  render() {\n    return (\n      <ContractsTableView\n        contracts={this.props.contractsData}\n        deleteHandler={id => this.props.setContractsDeleteEntry(id)}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    contractsData: getContractsData(state)\n  }),\n  { setContractsRequest, setContractsDeleteEntry }\n)(ContractsTable);","import React from 'react';\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst AddNewContractView = ({ submitHandler, inputChangeHandler }) => {\n  return (\n    <>\n    <Row>\n      <Col>\n        <h1 className=\"contracts-table__header text-center my-2\">Add new Contract</h1>\n      </Col>\n    </Row>\n\n    <Form className=\"mb-4\" onSubmit={submitHandler}>\n      <Row form>\n        <Col>\n          <Row>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"userName\">User name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"userName\"\n                  id=\"userName\"\n                  placeholder=\"Name\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"userSurname\">User Surname</Label>\n                <Input\n                  type=\"text\"\n                  name=\"userSurname\"\n                  id=\"userSurname\"\n                  placeholder=\"Surname\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"amountInUsd\">Amount in USD</Label>\n                <Input\n                  type=\"text\"\n                  name=\"amountInUsd\"\n                  id=\"amountInUsd\"\n                  placeholder=\"0\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"currency\">Currency</Label>\n                <Input\n                  type=\"text\"\n                  name=\"currency\"\n                  id=\"currency\"\n                  placeholder=\"ETH\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"date\">Date</Label>\n                <Input\n                  type=\"text\"\n                  name=\"date\"\n                  id=\"date\"\n                  placeholder=\"2018-04-23\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2} className=\"d-flex align-items-end\">\n              <Button\n                color=\"info\"\n                className=\"w-100 mb-3\"\n                type=\"submit\"\n              >\n                Add contract\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Form>\n    </>\n  );\n};\n\nexport default AddNewContractView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsNewEntry } from '../modules/contracts/actions';\n\nimport AddNewContractView from '../components/AddNewContractView';\n\nexport class AddNewContract extends Component {\n  state = {\n    userName: '',\n    userSurname: '',\n    amountInUsd: '',\n    currency: '',\n    date: '',\n  };\n\n  inputChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addNewContractHandler = e => {\n    e.preventDefault();\n    const id = Math.round(Math.random() * 1000);\n    this.props.setContractsNewEntry({ ...this.state, id });\n  };\n\n  render() {\n    return (\n      <AddNewContractView\n        submitHandler={this.addNewContractHandler}\n        inputChangeHandler={this.inputChangeHandler}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setContractsNewEntry }\n)(AddNewContract);","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport HeaderView from './HeaderView';\nimport ContractsTable from '../containers/ContractsTable';\nimport AddNewContract from '../containers/AddNewContract';\n\nconst MainPageView = ({ chartData }) => (\n  <>\n  <HeaderView />\n\n  <main className=\"mt-4\">\n    <Container>\n      <Row className=\"mb-4\">\n        <Col>\n          <Line data={chartData}/>\n        </Col>\n      </Row>\n\n      <AddNewContract />\n\n      <ContractsTable />\n    </Container>\n  </main>\n  </>\n);\n\nexport default MainPageView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setCoinApiRequest } from '../modules/coinApi/actions';\nimport { getCoinApiData } from '../modules/reducer';\n\nimport MainPageView from '../components/MainPageView';\n\nexport class MainPage extends Component {\n  componentDidMount() {\n    this.props.setCoinApiRequest();\n  }\n\n  getChartData = (data = []) => {\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December' ];\n\n    const sortedData = data.sort((a, b) => (\n      (a.time_coinapi < b.time_coinapi) ? -1 : (a.time_coinapi > b.time_coinapi) ? 1 : 0\n    ));\n\n    const chartLabels = sortedData.map(data => monthNames[ new Date(data.time_coinapi).getMonth() ]);\n    const chartDatasetsData = sortedData.map(data => data.bid_price);\n    const chartDatasetsLabel = (data.asset_id_base) ? `The rates for ${data.asset_id_base} currency` : `The rates chart`;\n\n    const chartData = {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: chartDatasetsLabel,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(97, 218, 251,0.4)',\n          borderColor: 'rgba(97, 218, 251,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(97, 218, 251,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(97, 218, 251,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: chartDatasetsData,\n        }\n      ]\n    };\n\n    return chartData;\n  };\n\n  render() {\n    const mockedCoinApiData = [\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 345,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 123,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 987,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-06-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 760,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-05-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 349,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-07-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 333,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 444,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 567,\n        \"bid_size\": 124\n      }\n    ];\n    return (\n      <div>\n        <MainPageView chartData={this.getChartData(mockedCoinApiData)}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    coinApiData: getCoinApiData(state),\n  }),\n  { setCoinApiRequest }\n)(MainPage);","import React, { Component } from 'react';\nimport store from './modules';\nimport { Provider } from 'react-redux';\n\nimport MainPage from './containers/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}