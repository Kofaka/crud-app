{"version":3,"sources":["components/logo.svg","constants/constants.js","modules/contracts/actions.js","modules/contracts/saga.js","modules/coinApi/actions.js","modules/coinApi/saga.js","modules/saga.js","modules/contracts/reducers.js","modules/coinApi/reducers.js","modules/reducer.js","modules/index.js","components/HeaderView.js","components/ContractsTableView.js","components/MainPageView.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONTRACTS_DB_URI","COINAPI_URI","concat","setContractsRequest","createAction","fetchContractsRequest","requestContractsWatcher","contractsWatcher","data","regenerator_default","a","wrap","_context","prev","next","call","axios","get","sent","put","t0","console","error","stop","_marked","this","_context2","takeEvery","_marked2","setCoinApiRequest","fetchCoinApiRequest","requestCoinApiWatcher","coinApiWatcher","saga_marked","saga_marked2","rootSaga","all","modules_saga_marked","contractsReducer","handleActions","Object","defineProperty","state","_ref","payload","objectSpread","contractsData","contracts","coinApiReducer","coinApiData","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","HeaderView","react_default","createElement","className","src","logo","alt","ContractsTable","Fragment","reactstrap_es","dark","striped","borderless","hover","arguments","length","undefined","rows","map","item","index","push","key","user","name","surname","scope","amountInUsd","currency","date","getTableInfoRows","MainPageView","chartData","src_components_HeaderView","react_chartjs_2_es","components_ContractsTableView","MainPage","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","getChartData","monthNames","sortedData","sort","b","time_coinapi","chartLabels","Date","getMonth","chartDatasetsData","bid_price","labels","datasets","label","asset_id_base","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","inherits","createClass","value","props","components_MainPageView","symbol_id","time_exchange","ask_price","ask_size","bid_size","Component","connect","fromContractsReducer","getContractsData","fromCoinApiReducer","getCoinApiData","App","react_redux_es","containers_MainPage","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9cdf8c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// In a production version tha call will be directly to db.\n// The call to mocked DB is made to have ability to test this app on remote server without setting it\nexport let CONTRACTS_DB_URI = '/db.json';\nif (process.env.NODE_ENV === 'production') {\n  CONTRACTS_DB_URI = '/crud-app/db.json';\n}\n\nexport const API_KEY = '8E38EABE-532A-4269-AA76-120EB4BDBCD6';\nexport const API_KEY2 = '55537FA1-D313-48DA-9E60-9135050457E5';\nexport const COINAPI_URI = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_ETH_USD/history?apikey=${API_KEY}&period_id=1MIN&time_start=2018-01-01T00:00:00`;","import { createAction } from 'redux-actions';\n\nexport const setContractsRequest = createAction('SET_CONTRACTS_REQUEST');\nexport const fetchContractsRequest = createAction('FETCH_CONTRACTS_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {CONTRACTS_DB_URI} from '../../constants/constants'\n\nimport {\n  setContractsRequest,\n  fetchContractsRequest,\n} from './actions';\n\nfunction* requestContractsWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(CONTRACTS_DB_URI);\n    });\n    yield put(fetchContractsRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsWatcher() {\n  yield takeEvery(setContractsRequest, requestContractsWatcher);\n}\n","import { createAction } from 'redux-actions';\n\nexport const setCoinApiRequest = createAction('SET_COIN_API_REQUEST');\nexport const fetchCoinApiRequest = createAction('FETCH_COIN_API_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {COINAPI_URI} from '../../constants/constants'\n\nimport {\n  setCoinApiRequest,\n  fetchCoinApiRequest,\n} from './actions';\n\nfunction* requestCoinApiWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(COINAPI_URI);\n    });\n    yield put(fetchCoinApiRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* coinApiWatcher() {\n  yield takeEvery(setCoinApiRequest, requestCoinApiWatcher);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { contractsWatcher } from './contracts/saga';\nimport { coinApiWatcher } from './coinApi/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    contractsWatcher(),\n    coinApiWatcher(),\n  ]);\n}\n","import { handleActions } from 'redux-actions';\nimport { fetchContractsRequest } from './actions';\n\nconst defaultState = {\n  contractsData: {},\n};\n\nconst contractsReducer = handleActions(\n  {\n    [fetchContractsRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        contractsData: payload.data.contracts,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getContractsData = state => state.contractsReducer.contractsData;\n\nexport default contractsReducer;","import { handleActions } from 'redux-actions';\nimport { fetchCoinApiRequest } from './actions';\n\nconst defaultState = {\n  coinApiData: {},\n};\n\nconst coinApiReducer = handleActions(\n  {\n    [fetchCoinApiRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        coinApiData: payload.data,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getCoinApiData = state => state.coinApiReducer.coinApiData;\n\nexport default coinApiReducer;","import { combineReducers } from 'redux';\n\n// Reducers\nimport contractsReducer, * as fromContractsReducer from './contracts/reducers';\nimport coinApiReducer, * as fromCoinApiReducer from './coinApi/reducers';\n\n// Public Selectors\nexport const getContractsData = state => fromContractsReducer.getContractsData(state);\nexport const getCoinApiData = state => fromCoinApiReducer.getCoinApiData(state);\n\nexport default combineReducers({\n  contractsReducer,\n  coinApiReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './saga';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(rootReducer, {}, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './HeaderView.css';\n\nconst HeaderView = () => (\n  <header className=\"header\">\n    <img src={logo} className=\"header-logo\" alt=\"logo\"/>\n    <p>\n      Welcome to React CRUD App\n    </p>\n  </header>\n);\n\nexport default HeaderView;","import React from 'react';\nimport { Row, Col, Table } from 'reactstrap';\n\nimport './ContractsTableView.css';\n\nconst getTableInfoRows = (data = []) => {\n  let rows = [];\n  (data.length) && data.map((item, index) => (\n    rows.push(\n      <tr key={`${index}_${item.user.name}_${item.user.surname}`}>\n        <th scope=\"row\">{index}</th>\n        <td>{item.user.name} {item.user.surname}</td>\n        <td>{item.amountInUsd}</td>\n        <td>{item.currency}</td>\n        <td>{item.date}</td>\n      </tr>\n    )\n  ));\n  return rows;\n};\n\nconst ContractsTable = ({ contracts }) => (\n  <>\n  <Row>\n    <Col>\n      <h1 className=\"contracts-table__header text-center my-2\">Contracts list</h1>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n      <Table dark striped borderless hover>\n        <thead>\n        <tr>\n          <th>#</th>\n          <td>User name</td>\n          <td>Amount in USD</td>\n          <td>Currency</td>\n          <td>Date</td>\n        </tr>\n        </thead>\n        <tbody>\n        {getTableInfoRows(contracts)}\n        </tbody>\n      </Table>\n    </Col>\n  </Row>\n  </>\n);\n\nexport default ContractsTable;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport HeaderView from './HeaderView';\nimport ContractsTableView from './ContractsTableView';\n\nconst MainPageView = ({ chartData, contracts }) => (\n  <>\n  <HeaderView />\n\n  <main className=\"mt-4\">\n    <Container>\n      <Row>\n        <Col>\n          <Line data={chartData}/>\n        </Col>\n      </Row>\n\n      <ContractsTableView contracts={contracts}/>\n    </Container>\n  </main>\n  </>\n);\n\nexport default MainPageView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsRequest } from '../modules/contracts/actions';\nimport { setCoinApiRequest } from '../modules/coinApi/actions';\nimport { getContractsData, getCoinApiData } from '../modules/reducer';\n\nimport MainPageView from '../components/MainPageView';\n\nexport class MainPage extends Component {\n  componentDidMount() {\n    this.props.setContractsRequest();\n    this.props.setCoinApiRequest();\n  }\n\n  getChartData = (data = []) => {\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December' ];\n\n    const sortedData = data.sort((a, b) => (\n      (a.time_coinapi < b.time_coinapi) ? -1 : (a.time_coinapi > b.time_coinapi) ? 1 : 0\n    ));\n\n    const chartLabels = sortedData.map(data => monthNames[ new Date(data.time_coinapi).getMonth() ]);\n    const chartDatasetsData = sortedData.map(data => data.bid_price);\n    const chartDatasetsLabel = (data.asset_id_base) ? `The rates for ${data.asset_id_base} currency` : `The rates chart`;\n\n    const chartData = {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: chartDatasetsLabel,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(97, 218, 251,0.4)',\n          borderColor: 'rgba(97, 218, 251,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(97, 218, 251,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(97, 218, 251,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: chartDatasetsData,\n        }\n      ]\n    };\n\n    return chartData;\n  };\n\n  render() {\n    const { contractsData } = this.props;\n    const mockedCoinApiData = [\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 345,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 123,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 987,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-06-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 760,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-05-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 349,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-07-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 333,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 444,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 567,\n        \"bid_size\": 124\n      }\n    ];\n    return <MainPageView chartData={this.getChartData(mockedCoinApiData)} contracts={contractsData}/>;\n  }\n}\n\nexport default connect(\n  state => ({\n    contractsData: getContractsData(state),\n    coinApiData: getCoinApiData(state),\n  }),\n  { setContractsRequest, setCoinApiRequest }\n)(MainPage);","import React, { Component } from 'react';\nimport store from './modules';\nimport { Provider } from 'react-redux';\n\nimport MainPage from './containers/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}