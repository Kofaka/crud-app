{"version":3,"sources":["components/logo.svg","firebase/firebase.js","firebase/db.js","modules/contracts/actions.js","helpers/index.js","modules/contracts/saga.js","constants/constants.js","modules/coinApi/actions.js","modules/coinApi/saga.js","modules/saga.js","modules/contracts/reducers.js","modules/coinApi/reducers.js","modules/reducer.js","modules/index.js","components/HeaderView.js","components/ContractsTableItemDetailsView.js","containers/ContractsTableItemDetails.js","components/ContractsTableEditItemView.js","containers/ContractsTableEditItem.js","components/DeleteContractView.js","containers/DeleteContract.js","components/ContractsTableView.js","containers/ContractsTable.js","components/AddNewContractView.js","containers/AddNewContract.js","components/MainPageView.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","doCreateContract","_ref","id","name","surname","amountInUsd","currency","date","ref","concat","set","user","onceGetContract","once","doDeleteContract","remove","doUpdateContract","_ref2","update","setContractsRequest","createAction","fetchContractsRequest","setContractsNewEntry","fetchContractsNewEntry","setContractsDeleteEntry","fetchContractsDeleteEntry","setContractsUpdateEntry","fetchContractsUpdateEntry","getContractsFromFirebase","then","snapshot","val","requestContractsWatcher","contractsWatcher","addContractsNewEntryWatcher","contractsNewEntryWatcher","deleteContractEntryWatcher","contractsDeleteEntryWatcher","updateContractEntryWatcher","contractsUpdateEntryWatcher","data","regenerator_default","a","wrap","_context","prev","next","call","sent","put","t0","console","error","stop","_marked","this","_context2","takeEvery","_marked2","newEntryData","dataToAdd","dataUpdated","_args3","arguments","_context3","undefined","payload","_marked3","_context4","_marked4","dataToDelete","_args5","_context5","_marked5","_context6","_marked6","dataToUpdateEntry","_args7","_context7","_marked7","_context8","_marked8","COINAPI_URI","setCoinApiRequest","fetchCoinApiRequest","requestCoinApiWatcher","coinApiWatcher","axios","get","saga_marked","saga_marked2","rootSaga","all","modules_saga_marked","contractsReducer","handleActions","_handleActions","Object","defineProperty","state","objectSpread","contractsData","contractsDataNewEntry","contractsDataToDeleteId","contractsDataToUpdate","coinApiReducer","coinApiData","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","HeaderView","react_default","createElement","className","src","logo","alt","ContractsTableItemDetailsView","contract","toggle","modalIsOpen","modalBackdrop","buttonHandler","keys","Fragment","reactstrap_es","color","onClick","tag","title","index_es","icon","faEye","size","isOpen","backdrop","md","ContractsTableItemDetails","modal","_this","setState","components_ContractsTableItemDetailsView","props","Component","ContractsTableEditItemView","cancelHandler","submitHandler","inputChangeHandler","disableSubmit","getFormGroup","label","inputType","placeholder","defaultValue","for","type","onChange","faPencilAlt","onSubmit","form","disabled","ContractsTableEditItem","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","toggleModalWindow","e","_e$target","target","value","cancelEditContractHandler","preventDefault","_this$props$contract","_this$props$contract$","editContractHandler","_this$state","ifDisabledSubmit","inherits","createClass","key","_this$props$contract2","_this$props$contract3","_this$state2","components_ContractsTableEditItemView","connect","DeleteContractView","itemId","deleteHandler","faTrashAlt","centered","outline","DeleteContract","components_DeleteContractView","ContractsTableView","contracts","dark","striped","borderless","hover","rows","map","item","index","push","scope","containers_ContractsTableItemDetails","containers_ContractsTableEditItem","containers_DeleteContract","getTableInfoRows","ContractsTable","src_components_ContractsTableView","fromContractsReducer","getContractsData","AddNewContractView","AddNewContract","addNewContractHandler","Math","round","random","components_AddNewContractView","MainPageView","chartData","src_components_HeaderView","react_chartjs_2_es","containers_AddNewContract","containers_ContractsTable","MainPage","getChartData","monthNames","sortedData","sort","b","time_coinapi","chartLabels","Date","getMonth","chartDatasetsData","bid_price","labels","datasets","asset_id_base","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","components_MainPageView","symbol_id","time_exchange","ask_price","ask_size","bid_size","fromCoinApiReducer","getCoinApiData","App","react_redux_es","containers_MainPage","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6491731d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCN1JBRTOM5bw8QMLpF5wZF00IdwQwrKoA\",\n  authDomain: \"polaris327-crud-application.firebaseapp.com\",\n  databaseURL: \"https://polaris327-crud-application.firebaseio.com\",\n  projectId: \"polaris327-crud-application\",\n  storageBucket: \"polaris327-crud-application.appspot.com\",\n  messagingSenderId: \"715090132651\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\n\nexport {\n  db,\n};\n","import { db } from './firebase';\n\nexport const doCreateContract = ({ id, name, surname, amountInUsd, currency, date }) =>\n  db.ref(`contracts/${id}`).set({\n    id,\n    user: {\n      name,\n      surname\n    },\n    amountInUsd,\n    currency,\n    date\n  });\n\nexport const onceGetContract = () => db.ref('contracts').once('value');\n\nexport const doDeleteContract = (id) => db.ref(`contracts/${id}`).remove();\n\nexport const doUpdateContract = ({ id, name, surname, amountInUsd, currency, date }) =>\n  db.ref(`contracts/${id}`).update({\n    id,\n    user: {\n      name,\n      surname\n    },\n    amountInUsd,\n    currency,\n    date\n  });\n","import { createAction } from 'redux-actions';\n\nexport const setContractsRequest = createAction('SET_CONTRACTS_REQUEST');\nexport const fetchContractsRequest = createAction('FETCH_CONTRACTS_REQUEST');\n\nexport const setContractsNewEntry = createAction('SET_CONTRACTS_NEW_ENTRY');\nexport const fetchContractsNewEntry = createAction('FETCH_CONTRACTS_NEW_ENTRY');\n\nexport const setContractsDeleteEntry = createAction('SET_CONTRACTS_DELETE_ENTRY');\nexport const fetchContractsDeleteEntry = createAction('FETCH_CONTRACTS_DELETE_ENTRY');\n\nexport const setContractsUpdateEntry = createAction('SET_CONTRACTS_UPDATE_ENTRY');\nexport const fetchContractsUpdateEntry = createAction('FETCH_CONTRACTS_UPDATE_ENTRY');\n","import { db } from '../firebase';\n\nexport const getContractsFromFirebase = () => db.onceGetContract().then(snapshot => snapshot.val());\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { db } from '../../firebase';\n\nimport {\n  setContractsRequest,\n  fetchContractsRequest,\n  setContractsNewEntry,\n  fetchContractsNewEntry,\n  setContractsDeleteEntry,\n  fetchContractsDeleteEntry,\n  setContractsUpdateEntry,\n  fetchContractsUpdateEntry,\n} from './actions';\nimport { getContractsFromFirebase } from '../../helpers'\n\n\nfunction* requestContractsWatcher() {\n  try {\n    const data = yield call(() => getContractsFromFirebase());\n    yield put(fetchContractsRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsWatcher() {\n  yield takeEvery(setContractsRequest, requestContractsWatcher);\n}\n\n\nfunction* addContractsNewEntryWatcher(newEntryData = {}) {\n  try {\n    const dataToAdd = yield call(() => db.doCreateContract(newEntryData.payload));\n    const dataUpdated = yield call(() => getContractsFromFirebase());\n\n    yield put(fetchContractsNewEntry(dataToAdd));\n    yield put(fetchContractsRequest(dataUpdated));\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsNewEntryWatcher() {\n  yield takeEvery(setContractsNewEntry, addContractsNewEntryWatcher);\n}\n\n\nfunction* deleteContractEntryWatcher(dataToDelete = '') {\n  try {\n    const data = yield call(() => db.doDeleteContract(dataToDelete.payload));\n    const dataUpdated = yield call(() => getContractsFromFirebase());\n\n    yield put(fetchContractsDeleteEntry(data));\n    yield put(fetchContractsRequest(dataUpdated));\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsDeleteEntryWatcher() {\n  yield takeEvery(setContractsDeleteEntry, deleteContractEntryWatcher);\n}\n\n\nfunction* updateContractEntryWatcher(dataToUpdateEntry = {}) {\n  try {\n    const data = yield call(() => db.doUpdateContract(dataToUpdateEntry.payload));\n    const dataUpdated = yield call(() => getContractsFromFirebase());\n\n    yield put(fetchContractsUpdateEntry(data));\n    yield put(fetchContractsRequest(dataUpdated));\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsUpdateEntryWatcher() {\n  yield takeEvery(setContractsUpdateEntry, updateContractEntryWatcher);\n}\n","// In a production version tha call will be directly to db.\n// The call to mocked DB is made to have ability to test this app on remote server without setting it\nexport let CONTRACTS_DB_URI = '/db.json';\nif (process.env.NODE_ENV === 'production') {\n  CONTRACTS_DB_URI = '/crud-app/db.json';\n}\n\n// export const API_KEY = '8E38EABE-532A-4269-AA76-120EB4BDBCD6';\n// export const API_KEY2 = '55537FA1-D313-48DA-9E60-9135050457E5';\n// export const COINAPI_URI = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_ETH_USD/history?apikey=${API_KEY}&period_id=1MIN&time_start=2018-01-01T00:00:00`;\nexport const COINAPI_URI = '/';","import { createAction } from 'redux-actions';\n\nexport const setCoinApiRequest = createAction('SET_COIN_API_REQUEST');\nexport const fetchCoinApiRequest = createAction('FETCH_COIN_API_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {COINAPI_URI} from '../../constants/constants'\n\nimport {\n  setCoinApiRequest,\n  fetchCoinApiRequest,\n} from './actions';\n\nfunction* requestCoinApiWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(COINAPI_URI);\n    });\n    yield put(fetchCoinApiRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* coinApiWatcher() {\n  yield takeEvery(setCoinApiRequest, requestCoinApiWatcher);\n}\n","import { all } from 'redux-saga/effects';\n\nimport {\n  contractsWatcher,\n  contractsNewEntryWatcher,\n  contractsDeleteEntryWatcher,\n  contractsUpdateEntryWatcher,\n} from './contracts/saga';\nimport { coinApiWatcher } from './coinApi/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    contractsWatcher(),\n    contractsNewEntryWatcher(),\n    contractsDeleteEntryWatcher(),\n    contractsUpdateEntryWatcher(),\n    coinApiWatcher(),\n  ]);\n}\n","import { handleActions } from 'redux-actions';\n\nimport {\n  fetchContractsRequest,\n  fetchContractsNewEntry,\n  fetchContractsDeleteEntry,\n  fetchContractsUpdateEntry\n} from './actions';\n\nconst defaultState = {\n  contractsData: {},\n  contractsDataNewEntry: {},\n  contractsDataToDeleteId: '',\n  contractsDataToUpdate: {},\n};\n\nconst contractsReducer = handleActions(\n  {\n    [fetchContractsRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        contractsData: payload,\n      };\n    },\n    [fetchContractsNewEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataNewEntry: payload,\n      };\n    },\n    [fetchContractsDeleteEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataToDeleteId: payload,\n      };\n    },\n    [fetchContractsUpdateEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataToUpdate: payload,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getContractsData = state => state.contractsReducer.contractsData;\n\nexport default contractsReducer;","import { handleActions } from 'redux-actions';\nimport { fetchCoinApiRequest } from './actions';\n\nconst defaultState = {\n  coinApiData: {},\n};\n\nconst coinApiReducer = handleActions(\n  {\n    [fetchCoinApiRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        coinApiData: payload.data,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getCoinApiData = state => state.coinApiReducer.coinApiData;\n\nexport default coinApiReducer;","import { combineReducers } from 'redux';\n\n// Reducers\nimport contractsReducer, * as fromContractsReducer from './contracts/reducers';\nimport coinApiReducer, * as fromCoinApiReducer from './coinApi/reducers';\n\n// Public Selectors\nexport const getContractsData = state => fromContractsReducer.getContractsData(state);\nexport const getCoinApiData = state => fromCoinApiReducer.getCoinApiData(state);\n\nexport default combineReducers({\n  contractsReducer,\n  coinApiReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './saga';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(rootReducer, {}, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './HeaderView.css';\n\nconst HeaderView = () => (\n  <header className=\"header\">\n    <img src={logo} className=\"header-logo\" alt=\"logo\"/>\n    <p>\n      Welcome to React CRUD App\n    </p>\n  </header>\n);\n\nexport default HeaderView;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nconst ContractsTableItemDetailsView = ({\n  contract,\n  toggle,\n  modalIsOpen,\n  modalBackdrop,\n  buttonHandler,\n}) => {\n  if (contract && Object.keys(contract).length) {\n    return (\n      <>\n      <Button\n        color=\"white\"\n        onClick={toggle}\n        className=\"p-0 button_as-icon\"\n        tag=\"a\"\n        title=\"View contract details\"\n      >\n        <FontAwesomeIcon icon={faEye} size=\"lg\" />\n      </Button>\n\n      <Modal\n        isOpen={modalIsOpen}\n        toggle={toggle}\n        backdrop={modalBackdrop}\n      >\n        <ModalHeader toggle={toggle}>\n          Details about contract <span className=\"text-info\">#{contract.id}</span>\n        </ModalHeader>\n\n        <ModalBody>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">User name:</Col>\n            <Col md={7} className=\"text-left\">{contract.user.name} {contract.user.surname}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Amount in USD:</Col>\n            <Col md={7} className=\"text-left\">{contract.amountInUsd}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Currency:</Col>\n            <Col md={7} className=\"text-left\">{contract.currency}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Date:</Col>\n            <Col md={7} className=\"text-left\">{contract.date}</Col>\n          </Row>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button color=\"info\" onClick={buttonHandler}>Got it</Button>\n        </ModalFooter>\n      </Modal>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default ContractsTableItemDetailsView;","import React, { Component } from 'react';\n\nimport ContractsTableItemDetailsView from '../components/ContractsTableItemDetailsView';\n\nclass ContractsTableItemDetails extends Component {\n  state = {\n    modal: false,\n    backdrop: true\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    return (\n      <ContractsTableItemDetailsView\n        contract={this.props.contract}\n        toggle={this.toggle}\n        modalIsOpen={this.state.modal}\n        modalBackdrop={this.state.backdrop}\n        buttonHandler={this.toggle}\n      />\n    );\n  }\n}\n\nexport default ContractsTableItemDetails;","import React from 'react';\nimport {\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst ContractsTableEditItemView = ({\n  data,\n  modalIsOpen,\n  toggle,\n  modalBackdrop,\n  cancelHandler,\n  submitHandler,\n  inputChangeHandler,\n  disableSubmit\n}) => {\n  const getFormGroup = (label, inputType, id, placeholder, defaultValue) => (\n    <Row className=\"mb-4\">\n      <Col>\n        <FormGroup>\n          <Label for={id}>{label}</Label>\n          <Input\n            type={inputType}\n            name={id}\n            id={id}\n            placeholder={placeholder}\n            defaultValue={defaultValue}\n            onChange={inputChangeHandler}\n          />\n        </FormGroup>\n      </Col>\n    </Row>\n  );\n\n  return (\n    <>\n    <Button\n      color=\"white\"\n      onClick={toggle}\n      className=\"p-0 button_as-icon\"\n      tag=\"a\"\n      title=\"Edit contract\"\n    >\n      <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\n    </Button>\n\n    <Modal\n      isOpen={modalIsOpen}\n      toggle={toggle}\n      backdrop={modalBackdrop}\n      size=\"lg\"\n    >\n      <ModalHeader toggle={toggle}>\n        Edit data <span className=\"text-info\">#{data.id}</span>\n      </ModalHeader>\n\n      <Form className=\"mb-4\" onSubmit={submitHandler}>\n        <ModalBody>\n          <Row form>\n            <Col>\n              {getFormGroup('User name', 'text', 'name', 'Name', data.name)}\n              {getFormGroup('User Surname', 'text', 'surname', 'Surname', data.surname)}\n              {getFormGroup('Amount in USD', 'number', 'amountInUsd', '0', data.amountInUsd)}\n              {getFormGroup('Currency', 'text', 'currency', 'ETH', data.currency)}\n              {getFormGroup('Date','date', 'date', '2018-04-23', data.date)}\n            </Col>\n          </Row>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={cancelHandler}>Cancel</Button>\n          <Button color=\"info\" onClick={submitHandler} disabled={disableSubmit}>Save</Button>\n        </ModalFooter>\n      </Form>\n    </Modal>\n    </>\n  );\n};\n\nexport default ContractsTableEditItemView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsUpdateEntry } from '../modules/contracts/actions';\n\nimport ContractsTableEditItemView from '../components/ContractsTableEditItemView';\n\nexport class ContractsTableEditItem extends Component {\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    amountInUsd: '',\n    currency: '',\n    date: '',\n    modalIsOpen: false,\n    modalBackdrop: true,\n  };\n\n  componentDidMount() {\n    const { id, user: { name, surname }, amountInUsd, currency, date } = this.props.contract;\n    this.setState({\n      id,\n      name,\n      surname,\n      amountInUsd,\n      currency,\n      date,\n    });\n  }\n\n  toggleModalWindow = () => {\n    this.setState({\n      modalIsOpen: !this.state.modalIsOpen\n    });\n  };\n\n  inputChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  cancelEditContractHandler = e => {\n    e.preventDefault();\n    const { id, user: { name, surname }, amountInUsd, currency, date } = this.props.contract;\n\n    this.setState({\n      id,\n      name,\n      surname,\n      amountInUsd,\n      currency,\n      date,\n    });\n\n    this.toggleModalWindow();\n  };\n\n  editContractHandler = e => {\n    e.preventDefault();\n    const { id, name, surname, amountInUsd, currency, date } = this.state;\n    this.props.setContractsUpdateEntry({ id, name, surname, amountInUsd, currency, date });\n    this.toggleModalWindow();\n  };\n\n  ifDisabledSubmit = () => (\n    !this.state.name.length ||\n    !this.state.surname.length ||\n    !this.state.amountInUsd.length ||\n    !this.state.currency.length ||\n    !this.state.date.length\n  );\n\n  render() {\n    const { id, name, surname, amountInUsd, currency, date } = this.state;\n    const data = { id, name, surname, amountInUsd, currency, date };\n    return (\n      <ContractsTableEditItemView\n        data={data}\n        modalIsOpen={this.state.modalIsOpen}\n        toggle={this.toggleModalWindow}\n        modalBackdrop={this.state.modalBackdrop}\n        cancelHandler={this.cancelEditContractHandler}\n        submitHandler={this.editContractHandler}\n        inputChangeHandler={this.inputChangeHandler}\n        disableSubmit={this.ifDisabledSubmit()}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setContractsUpdateEntry }\n)(ContractsTableEditItem);\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst DeleteContractView = ({ itemId, toggle, modalIsOpen, modalBackdrop, deleteHandler }) => (\n  <>\n  <Button\n    color=\"white\"\n    onClick={toggle}\n    className=\"p-0 button_as-icon\"\n    tag=\"a\"\n    title=\"Delete contract\"\n  >\n    <FontAwesomeIcon icon={faTrashAlt} size=\"lg\"/>\n  </Button>\n\n  <Modal\n    centered\n    size=\"sm\"\n    toggle={toggle}\n    isOpen={modalIsOpen}\n    backdrop={modalBackdrop}\n  >\n    <ModalHeader toggle={toggle} className=\"text-danger\">\n      Delete contract <span className=\"font-weight-bold\">#{itemId}</span>\n    </ModalHeader>\n\n    <ModalBody>\n      Are You sure that you want to delete contract <span className=\"font-weight-bold\">#{itemId}</span>?\n    </ModalBody>\n\n    <ModalFooter>\n      <Button\n        color=\"secondary\"\n        onClick={toggle}\n        outline\n      >\n        Cancel\n      </Button>\n\n      <Button\n        color=\"danger\"\n        onClick={deleteHandler}\n      >\n        Delete\n      </Button>\n    </ModalFooter>\n  </Modal>\n  </>\n);\n\nexport default DeleteContractView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsDeleteEntry } from '../modules/contracts/actions';\nimport DeleteContractView from '../components/DeleteContractView';\n\nexport class DeleteContract extends Component {\n  state = {\n    modalIsOpen: false,\n    modalBackdrop: true,\n  };\n\n  toggleModalWindow = () => {\n    this.setState({\n      modalIsOpen: !this.state.modalIsOpen\n    });\n  };\n\n  deleteHandler = () => {\n    this.props.setContractsDeleteEntry(this.props.itemId);\n    this.toggleModalWindow();\n  };\n\n  render() {\n    return (\n      <DeleteContractView\n        itemId={this.props.itemId}\n        toggle={this.toggleModalWindow}\n        modalIsOpen={this.state.modalIsOpen}\n        modalBackdrop={this.state.modalBackdrop}\n        deleteHandler={this.deleteHandler}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setContractsDeleteEntry }\n)(DeleteContract);\n","import React from 'react';\nimport { Row, Col, Table } from 'reactstrap';\n\nimport ContractsTableItemDetails from '../containers/ContractsTableItemDetails';\nimport ContractsTableEditItem from '../containers/ContractsTableEditItem';\nimport DeleteContract from '../containers/DeleteContract';\n\nimport './ContractsTableView.css';\n\nconst getTableInfoRows = (data = {}) => {\n  let rows = [];\n  (Object.keys(data).length) && Object.keys(data).map((item, index) => (\n    rows.push(\n      <tr key={`${index}_${data[ item ].user.name}_${data[ item ].user.surname}`}>\n        <th scope=\"row\">{data[ item ].id}</th>\n        <td>{data[ item ].user.name} {data[ item ].user.surname}</td>\n        <td>{data[ item ].amountInUsd}</td>\n        <td>{data[ item ].currency}</td>\n        <td>{data[ item ].date}</td>\n        <td>\n          <ContractsTableItemDetails contract={data[ item ]}/>\n        </td>\n        <td>\n          <ContractsTableEditItem contract={data[ item ]}/>\n        </td>\n        <td>\n          <DeleteContract itemId={data[ item ].id}/>\n        </td>\n      </tr>\n    )\n  ));\n  return rows;\n};\n\nconst ContractsTableView = ({ contracts, deleteHandler }) => (\n  <>\n  <Row>\n    <Col>\n      <h1 className=\"contracts-table__header text-center my-2\">Contracts list</h1>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n      <Table dark striped borderless hover>\n        <thead>\n        <tr>\n          <th>#</th>\n          <td>User name</td>\n          <td>Amount in USD</td>\n          <td>Currency</td>\n          <td>Date</td>\n        </tr>\n        </thead>\n        <tbody>\n        {getTableInfoRows(contracts, deleteHandler)}\n        </tbody>\n      </Table>\n    </Col>\n  </Row>\n  </>\n);\n\nexport default ContractsTableView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsRequest } from '../modules/contracts/actions';\nimport { getContractsData } from '../modules/reducer';\n\nimport ContractsTableView from '../components/ContractsTableView';\n\nexport class ContractsTable extends Component {\n  componentDidMount() {\n    this.props.setContractsRequest();\n  }\n\n  render() {\n    return <ContractsTableView contracts={this.props.contractsData}/>;\n  }\n}\n\nexport default connect(\n  state => ({\n    contractsData: getContractsData(state)\n  }),\n  { setContractsRequest }\n)(ContractsTable);\n","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst AddNewContractView = ({ submitHandler, inputChangeHandler, disableSubmit }) => {\n  const getFormGroup = (label, inputType, id, placeholder) => (\n    <Col md={2}>\n      <FormGroup>\n        <Label for={id}>{label}</Label>\n        <Input\n          type={inputType}\n          name={id}\n          id={id}\n          placeholder={placeholder}\n          onChange={inputChangeHandler}\n        />\n      </FormGroup>\n    </Col>\n  );\n\n  return (\n    <>\n    <Row>\n      <Col>\n        <h1 className=\"contracts-table__header text-center my-2\">Add new Contract</h1>\n      </Col>\n    </Row>\n\n    <Form className=\"mb-4\" onSubmit={submitHandler}>\n      <Row form>\n        <Col>\n          <Row>\n            {getFormGroup('User name', 'text', 'name', 'Name')}\n            {getFormGroup('User Surname', 'text', 'surname', 'Surname')}\n            {getFormGroup('Amount in USD', 'number', 'amountInUsd', '0')}\n            {getFormGroup('Currency', 'text', 'currency', 'ETH')}\n            {getFormGroup('Date', 'date', 'date', '2018-04-23')}\n\n            <Col md={2} className=\"d-flex align-items-end\">\n              <Button\n                color=\"info\"\n                className=\"w-100 mb-3\"\n                type=\"submit\"\n                disabled={disableSubmit}\n              >\n                Add contract\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Form>\n    </>\n  );\n};\n\nexport default AddNewContractView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsNewEntry } from '../modules/contracts/actions';\n\nimport AddNewContractView from '../components/AddNewContractView';\n\nexport class AddNewContract extends Component {\n  state = {\n    name: '',\n    surname: '',\n    amountInUsd: '',\n    currency: '',\n    date: '',\n  };\n\n  inputChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addNewContractHandler = e => {\n    e.preventDefault();\n    const id = Math.round(Math.random() * 1000);\n    this.props.setContractsNewEntry({ ...this.state, id });\n  };\n\n  ifDisabledSubmit = () => (\n    !this.state.name.length ||\n    !this.state.surname.length ||\n    !this.state.amountInUsd.length ||\n    !this.state.currency.length ||\n    !this.state.date.length\n  );\n\n  render() {\n    return (\n      <AddNewContractView\n        submitHandler={this.addNewContractHandler}\n        inputChangeHandler={this.inputChangeHandler}\n        disableSubmit={this.ifDisabledSubmit()}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setContractsNewEntry }\n)(AddNewContract);","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport HeaderView from './HeaderView';\nimport ContractsTable from '../containers/ContractsTable';\nimport AddNewContract from '../containers/AddNewContract';\n\nconst MainPageView = ({ chartData }) => (\n  <>\n  <HeaderView />\n\n  <main className=\"mt-4\">\n    <Container>\n      <Row className=\"mb-4\">\n        <Col>\n          <Line data={chartData}/>\n        </Col>\n      </Row>\n\n      <AddNewContract />\n\n      <ContractsTable />\n    </Container>\n  </main>\n  </>\n);\n\nexport default MainPageView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setCoinApiRequest } from '../modules/coinApi/actions';\nimport { getCoinApiData } from '../modules/reducer';\n\nimport MainPageView from '../components/MainPageView';\n\nexport class MainPage extends Component {\n  componentDidMount() {\n    this.props.setCoinApiRequest();\n  }\n\n  getChartData = (data = []) => {\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December' ];\n\n    const sortedData = data.sort((a, b) => (\n      (a.time_coinapi < b.time_coinapi) ? -1 : (a.time_coinapi > b.time_coinapi) ? 1 : 0\n    ));\n\n    const chartLabels = sortedData.map(data => monthNames[ new Date(data.time_coinapi).getMonth() ]);\n    const chartDatasetsData = sortedData.map(data => data.bid_price);\n    const chartDatasetsLabel = (data.asset_id_base) ? `The rates for ${data.asset_id_base} currency` : `The rates chart`;\n\n    const chartData = {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: chartDatasetsLabel,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(97, 218, 251,0.4)',\n          borderColor: 'rgba(97, 218, 251,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(97, 218, 251,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(97, 218, 251,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: chartDatasetsData,\n        }\n      ]\n    };\n\n    return chartData;\n  };\n\n  render() {\n    const mockedCoinApiData = [\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 345,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 123,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 987,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-06-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 760,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-05-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 349,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-07-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 333,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 444,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 567,\n        \"bid_size\": 124\n      }\n    ];\n    return (\n      <div>\n        <MainPageView chartData={this.getChartData(mockedCoinApiData)}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    coinApiData: getCoinApiData(state),\n  }),\n  { setCoinApiRequest }\n)(MainPage);","import React, { Component } from 'react';\nimport store from './modules';\nimport { Provider } from 'react-redux';\n\nimport MainPage from './containers/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}