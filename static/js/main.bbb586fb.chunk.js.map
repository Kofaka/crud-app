{"version":3,"sources":["components/logo.svg","firebase/firebase.js","firebase/db.js","modules/contracts/actions.js","helpers/index.js","modules/contracts/saga.js","constants/constants.js","modules/coinApi/actions.js","modules/coinApi/saga.js","modules/saga.js","modules/contracts/reducers.js","modules/coinApi/reducers.js","modules/reducer.js","modules/index.js","components/HeaderView.js","components/ContractsTableItemDetailsView.js","containers/ContractsTableItemDetails.js","components/ContractsTableView.js","containers/ContractsTable.js","components/AddNewContractView.js","containers/AddNewContract.js","components/MainPageView.js","containers/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","doCreateContract","_ref","id","userName","userSurname","amountInUsd","currency","date","ref","concat","set","user","name","surname","onceGetContract","once","doDeleteContract","remove","setContractsRequest","createAction","fetchContractsRequest","setContractsNewEntry","fetchContractsNewEntry","setContractsDeleteEntry","fetchContractsDeleteEntry","getContractsFromFirebase","then","snapshot","val","requestContractsWatcher","contractsWatcher","addContractsNewEntryWatcher","contractsNewEntryWatcher","deleteContractEntryWatcher","contractsDeleteEntryWatcher","data","regenerator_default","a","wrap","_context","prev","next","call","sent","put","t0","console","error","stop","_marked","this","_context2","takeEvery","_marked2","newEntryData","dataToAdd","dataUpdated","_args3","arguments","_context3","undefined","payload","_marked3","_context4","_marked4","dataToDelete","_args5","_context5","_marked5","_context6","_marked6","COINAPI_URI","setCoinApiRequest","fetchCoinApiRequest","requestCoinApiWatcher","coinApiWatcher","axios","get","saga_marked","saga_marked2","rootSaga","all","modules_saga_marked","contractsReducer","handleActions","_handleActions","Object","defineProperty","state","objectSpread","contractsData","contractsDataNewEntry","contractsDataToDeleteId","coinApiReducer","coinApiData","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","rootReducer","run","HeaderView","react_default","createElement","className","src","logo","alt","ContractsTableItemDetailsView","contract","buttonLabel","toggle","modalIsOpen","modalBackdrop","buttonHandler","keys","Fragment","reactstrap_es","color","onClick","isOpen","backdrop","md","ContractsTableItemDetails","modal","_this","setState","components_ContractsTableItemDetailsView","props","Component","ContractsTableView","contracts","deleteHandler","dark","striped","borderless","hover","handler","rows","map","item","index","push","key","scope","containers_ContractsTableItemDetails","getTableInfoRows","ContractsTable","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","itemId","confirm","inherits","createClass","value","src_components_ContractsTableView","connect","fromContractsReducer","getContractsData","AddNewContractView","submitHandler","inputChangeHandler","disableSubmit","onSubmit","form","for","type","placeholder","onChange","disabled","AddNewContract","e","_e$target","target","addNewContractHandler","preventDefault","Math","round","random","ifDisabledSubmit","components_AddNewContractView","MainPageView","chartData","src_components_HeaderView","react_chartjs_2_es","containers_AddNewContract","containers_ContractsTable","MainPage","getChartData","monthNames","sortedData","sort","b","time_coinapi","chartLabels","Date","getMonth","chartDatasetsData","bid_price","labels","datasets","label","asset_id_base","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","components_MainPageView","symbol_id","time_exchange","ask_price","ask_size","bid_size","fromCoinApiReducer","getCoinApiData","App","react_redux_es","containers_MainPage","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbb586fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCN1JBRTOM5bw8QMLpF5wZF00IdwQwrKoA\",\n  authDomain: \"polaris327-crud-application.firebaseapp.com\",\n  databaseURL: \"https://polaris327-crud-application.firebaseio.com\",\n  projectId: \"polaris327-crud-application\",\n  storageBucket: \"polaris327-crud-application.appspot.com\",\n  messagingSenderId: \"715090132651\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.database();\n\nexport {\n  db,\n};\n","import { db } from './firebase';\n\nexport const doCreateContract = ({ id, userName, userSurname, amountInUsd, currency, date }) =>\n  db.ref(`contracts/${id}`).set({\n    id,\n    user: {\n      name: userName,\n      surname: userSurname\n    },\n    amountInUsd,\n    currency,\n    date\n  });\n\nexport const onceGetContract = () => db.ref('contracts').once('value');\n\nexport const doDeleteContract = (id) => db.ref(`contracts/${id}`).remove();\n","import { createAction } from 'redux-actions';\n\nexport const setContractsRequest = createAction('SET_CONTRACTS_REQUEST');\nexport const fetchContractsRequest = createAction('FETCH_CONTRACTS_REQUEST');\n\nexport const setContractsNewEntry = createAction('SET_CONTRACTS_NEW_ENTRY');\nexport const fetchContractsNewEntry = createAction('FETCH_CONTRACTS_NEW_ENTRY');\n\nexport const setContractsDeleteEntry = createAction('SET_CONTRACTS_DELETE_ENTRY');\nexport const fetchContractsDeleteEntry = createAction('FETCH_CONTRACTS_DELETE_ENTRY');\n","import { db } from '../firebase';\n\nexport const getContractsFromFirebase = () => db.onceGetContract().then(snapshot => snapshot.val());\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport { db } from '../../firebase';\n\nimport {\n  setContractsRequest,\n  fetchContractsRequest,\n  setContractsNewEntry,\n  fetchContractsNewEntry,\n  setContractsDeleteEntry,\n  fetchContractsDeleteEntry,\n} from './actions';\nimport { getContractsFromFirebase } from '../../helpers'\n\nfunction* requestContractsWatcher() {\n  try {\n    const data = yield call(() => getContractsFromFirebase());\n    yield put(fetchContractsRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsWatcher() {\n  yield takeEvery(setContractsRequest, requestContractsWatcher);\n}\n\nfunction* addContractsNewEntryWatcher(newEntryData = {}) {\n  try {\n    const dataToAdd = yield call(() => db.doCreateContract(newEntryData.payload));\n    const dataUpdated = yield call(() => getContractsFromFirebase());\n\n    yield put(fetchContractsNewEntry(dataToAdd));\n    yield put(fetchContractsRequest(dataUpdated));\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsNewEntryWatcher() {\n  yield takeEvery(setContractsNewEntry, addContractsNewEntryWatcher);\n}\n\nfunction* deleteContractEntryWatcher(dataToDelete = '') {\n  try {\n    const data = yield call(() => db.doDeleteContract(dataToDelete.payload));\n    const dataUpdated = yield call(() => getContractsFromFirebase());\n\n    yield put(fetchContractsDeleteEntry(data));\n    yield put(fetchContractsRequest(dataUpdated));\n\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* contractsDeleteEntryWatcher() {\n  yield takeEvery(setContractsDeleteEntry, deleteContractEntryWatcher);\n}\n","// In a production version tha call will be directly to db.\n// The call to mocked DB is made to have ability to test this app on remote server without setting it\nexport let CONTRACTS_DB_URI = '/db.json';\nif (process.env.NODE_ENV === 'production') {\n  CONTRACTS_DB_URI = '/crud-app/db.json';\n}\n\nexport const API_KEY = '8E38EABE-532A-4269-AA76-120EB4BDBCD6';\nexport const API_KEY2 = '55537FA1-D313-48DA-9E60-9135050457E5';\nexport const COINAPI_URI = `https://rest.coinapi.io/v1/ohlcv/BITSTAMP_SPOT_ETH_USD/history?apikey=${API_KEY}&period_id=1MIN&time_start=2018-01-01T00:00:00`;","import { createAction } from 'redux-actions';\n\nexport const setCoinApiRequest = createAction('SET_COIN_API_REQUEST');\nexport const fetchCoinApiRequest = createAction('FETCH_COIN_API_REQUEST');\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {COINAPI_URI} from '../../constants/constants'\n\nimport {\n  setCoinApiRequest,\n  fetchCoinApiRequest,\n} from './actions';\n\nfunction* requestCoinApiWatcher() {\n  try {\n    const data = yield call(() => {\n      return axios.get(COINAPI_URI);\n    });\n    yield put(fetchCoinApiRequest(data));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* coinApiWatcher() {\n  yield takeEvery(setCoinApiRequest, requestCoinApiWatcher);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { contractsWatcher, contractsNewEntryWatcher, contractsDeleteEntryWatcher } from './contracts/saga';\nimport { coinApiWatcher } from './coinApi/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    contractsWatcher(),\n    contractsNewEntryWatcher(),\n    contractsDeleteEntryWatcher(),\n    coinApiWatcher(),\n  ]);\n}\n","import { handleActions } from 'redux-actions';\nimport { fetchContractsRequest, fetchContractsNewEntry, fetchContractsDeleteEntry } from './actions';\n\nconst defaultState = {\n  contractsData: {},\n  contractsDataNewEntry: {},\n  contractsDataToDeleteId: '',\n};\n\nconst contractsReducer = handleActions(\n  {\n    [fetchContractsRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        contractsData: payload,\n      };\n    },\n    [fetchContractsNewEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataNewEntry: payload,\n      };\n    },\n    [fetchContractsDeleteEntry]: (state, payload) => {\n      return {\n        ...state,\n        contractsDataToDeleteId: payload,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getContractsData = state => state.contractsReducer.contractsData;\n\nexport default contractsReducer;","import { handleActions } from 'redux-actions';\nimport { fetchCoinApiRequest } from './actions';\n\nconst defaultState = {\n  coinApiData: {},\n};\n\nconst coinApiReducer = handleActions(\n  {\n    [fetchCoinApiRequest]: (state, { payload }) => {\n      return {\n        ...state,\n        coinApiData: payload.data,\n      };\n    },\n  },\n  defaultState,\n);\n\n// Private Selectors\nexport const getCoinApiData = state => state.coinApiReducer.coinApiData;\n\nexport default coinApiReducer;","import { combineReducers } from 'redux';\n\n// Reducers\nimport contractsReducer, * as fromContractsReducer from './contracts/reducers';\nimport coinApiReducer, * as fromCoinApiReducer from './coinApi/reducers';\n\n// Public Selectors\nexport const getContractsData = state => fromContractsReducer.getContractsData(state);\nexport const getCoinApiData = state => fromCoinApiReducer.getCoinApiData(state);\n\nexport default combineReducers({\n  contractsReducer,\n  coinApiReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootSaga from './saga';\nimport rootReducer from './reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\nconst store = createStore(rootReducer, {}, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './HeaderView.css';\n\nconst HeaderView = () => (\n  <header className=\"header\">\n    <img src={logo} className=\"header-logo\" alt=\"logo\"/>\n    <p>\n      Welcome to React CRUD App\n    </p>\n  </header>\n);\n\nexport default HeaderView;","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\n\nconst ContractsTableItemDetailsView = ({\n  contract,\n  buttonLabel,\n  toggle,\n  modalIsOpen,\n  modalBackdrop,\n  buttonHandler,\n}) => {\n  if (contract && Object.keys(contract).length) {\n    return (\n      <>\n      <Button color=\"info\" onClick={toggle}>{buttonLabel}</Button>\n\n      <Modal\n        isOpen={modalIsOpen}\n        toggle={toggle}\n        backdrop={modalBackdrop}\n      >\n        <ModalHeader toggle={toggle}>\n          Details about contract <span className=\"text-info\">#{contract.id}</span>\n        </ModalHeader>\n\n        <ModalBody>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">User name:</Col>\n            <Col md={7} className=\"text-left\">{contract.user.name} {contract.user.surname}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Amount in USD:</Col>\n            <Col md={7} className=\"text-left\">{contract.amountInUsd}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Currency:</Col>\n            <Col md={7} className=\"text-left\">{contract.currency}</Col>\n          </Row>\n          <Row>\n            <Col md={5} className=\"text-uppercase font-weight-bold text-right\">Date:</Col>\n            <Col md={7} className=\"text-left\">{contract.date}</Col>\n          </Row>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button color=\"info\" onClick={buttonHandler}>Got it</Button>\n        </ModalFooter>\n      </Modal>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default ContractsTableItemDetailsView;","import React, { Component } from 'react';\n\nimport ContractsTableItemDetailsView from '../components/ContractsTableItemDetailsView';\n\nclass ContractsTableItemDetails extends Component {\n  state = {\n    modal: false,\n    backdrop: true\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    return (\n      <ContractsTableItemDetailsView\n        contract={this.props.contract}\n        buttonLabel={this.props.buttonLabel}\n        toggle={this.toggle}\n        modalIsOpen={this.state.modal}\n        modalBackdrop={this.state.backdrop}\n        buttonHandler={this.toggle}\n      />\n    );\n  }\n}\n\nexport default ContractsTableItemDetails;","import React from 'react';\nimport { Row, Col, Table, Button } from 'reactstrap';\n\nimport './ContractsTableView.css';\nimport ContractsTableItemDetails from '../containers/ContractsTableItemDetails';\n\nconst getTableInfoRows = (data = {}, handler) => {\n  let rows = [];\n  (Object.keys(data).length) && Object.keys(data).map((item, index) => (\n    rows.push(\n      <tr key={`${index}_${data[ item ].user.name}_${data[ item ].user.surname}`}>\n        <th scope=\"row\">{data[ item ].id}</th>\n        <td>{data[ item ].user.name} {data[ item ].user.surname}</td>\n        <td>{data[ item ].amountInUsd}</td>\n        <td>{data[ item ].currency}</td>\n        <td>{data[ item ].date}</td>\n        <td>\n          <Button\n            color=\"info\"\n            className=\"w-100\"\n            onClick={() => handler(data[ item ].id)}\n          >\n            Delete contract\n          </Button>\n        </td>\n        <td>\n          <ContractsTableItemDetails\n            contract={data[ item ]}\n            buttonLabel=\"Show details\"\n          />\n        </td>\n      </tr>\n    )\n  ));\n  return rows;\n};\n\nconst ContractsTableView = ({ contracts, deleteHandler }) => (\n  <>\n  <Row>\n    <Col>\n      <h1 className=\"contracts-table__header text-center my-2\">Contracts list</h1>\n    </Col>\n  </Row>\n  <Row>\n    <Col>\n      <Table dark striped borderless hover>\n        <thead>\n        <tr>\n          <th>#</th>\n          <td>User name</td>\n          <td>Amount in USD</td>\n          <td>Currency</td>\n          <td>Date</td>\n        </tr>\n        </thead>\n        <tbody>\n        {getTableInfoRows(contracts, deleteHandler)}\n        </tbody>\n      </Table>\n    </Col>\n  </Row>\n  </>\n);\n\nexport default ContractsTableView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsRequest, setContractsDeleteEntry } from '../modules/contracts/actions';\nimport { getContractsData } from '../modules/reducer';\n\nimport ContractsTableView from '../components/ContractsTableView';\n\nexport class ContractsTable extends Component {\n  componentDidMount() {\n    this.props.setContractsRequest();\n  }\n\n  deleteHandler = (itemId) => {\n    const confirmDelete = window.confirm(`Are You sure that you want to delete contract #${itemId}?`);\n    confirmDelete && this.props.setContractsDeleteEntry(itemId);\n  };\n\n  render() {\n    return (\n      <ContractsTableView\n        contracts={this.props.contractsData}\n        deleteHandler={this.deleteHandler}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    contractsData: getContractsData(state)\n  }),\n  { setContractsRequest, setContractsDeleteEntry }\n)(ContractsTable);","import React from 'react';\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst AddNewContractView = ({ submitHandler, inputChangeHandler, disableSubmit }) => {\n  return (\n    <>\n    <Row>\n      <Col>\n        <h1 className=\"contracts-table__header text-center my-2\">Add new Contract</h1>\n      </Col>\n    </Row>\n\n    <Form className=\"mb-4\" onSubmit={submitHandler}>\n      <Row form>\n        <Col>\n          <Row>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"userName\">User name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"userName\"\n                  id=\"userName\"\n                  placeholder=\"Name\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"userSurname\">User Surname</Label>\n                <Input\n                  type=\"text\"\n                  name=\"userSurname\"\n                  id=\"userSurname\"\n                  placeholder=\"Surname\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"amountInUsd\">Amount in USD</Label>\n                <Input\n                  type=\"number\"\n                  name=\"amountInUsd\"\n                  id=\"amountInUsd\"\n                  placeholder=\"0\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"currency\">Currency</Label>\n                <Input\n                  type=\"text\"\n                  name=\"currency\"\n                  id=\"currency\"\n                  placeholder=\"ETH\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"date\">Date</Label>\n                <Input\n                  type=\"text\"\n                  name=\"date\"\n                  id=\"date\"\n                  placeholder=\"2018-04-23\"\n                  onChange={inputChangeHandler}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2} className=\"d-flex align-items-end\">\n              <Button\n                color=\"info\"\n                className=\"w-100 mb-3\"\n                type=\"submit\"\n                disabled={disableSubmit}\n              >\n                Add contract\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Form>\n    </>\n  );\n};\n\nexport default AddNewContractView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setContractsNewEntry } from '../modules/contracts/actions';\n\nimport AddNewContractView from '../components/AddNewContractView';\n\nexport class AddNewContract extends Component {\n  state = {\n    userName: '',\n    userSurname: '',\n    amountInUsd: '',\n    currency: '',\n    date: '',\n  };\n\n  inputChangeHandler = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addNewContractHandler = e => {\n    e.preventDefault();\n    const id = Math.round(Math.random() * 1000);\n    this.props.setContractsNewEntry({ ...this.state, id });\n  };\n\n  ifDisabledSubmit = () => (\n    !this.state.userName.length ||\n    !this.state.userSurname.length ||\n    !this.state.amountInUsd.length ||\n    !this.state.currency.length ||\n    !this.state.date.length\n  );\n\n  render() {\n    return (\n      <AddNewContractView\n        submitHandler={this.addNewContractHandler}\n        inputChangeHandler={this.inputChangeHandler}\n        disableSubmit={this.ifDisabledSubmit()}\n      />\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setContractsNewEntry }\n)(AddNewContract);","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\n\nimport HeaderView from './HeaderView';\nimport ContractsTable from '../containers/ContractsTable';\nimport AddNewContract from '../containers/AddNewContract';\n\nconst MainPageView = ({ chartData }) => (\n  <>\n  <HeaderView />\n\n  <main className=\"mt-4\">\n    <Container>\n      <Row className=\"mb-4\">\n        <Col>\n          <Line data={chartData}/>\n        </Col>\n      </Row>\n\n      <AddNewContract />\n\n      <ContractsTable />\n    </Container>\n  </main>\n  </>\n);\n\nexport default MainPageView;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setCoinApiRequest } from '../modules/coinApi/actions';\nimport { getCoinApiData } from '../modules/reducer';\n\nimport MainPageView from '../components/MainPageView';\n\nexport class MainPage extends Component {\n  componentDidMount() {\n    this.props.setCoinApiRequest();\n  }\n\n  getChartData = (data = []) => {\n    const monthNames = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December' ];\n\n    const sortedData = data.sort((a, b) => (\n      (a.time_coinapi < b.time_coinapi) ? -1 : (a.time_coinapi > b.time_coinapi) ? 1 : 0\n    ));\n\n    const chartLabels = sortedData.map(data => monthNames[ new Date(data.time_coinapi).getMonth() ]);\n    const chartDatasetsData = sortedData.map(data => data.bid_price);\n    const chartDatasetsLabel = (data.asset_id_base) ? `The rates for ${data.asset_id_base} currency` : `The rates chart`;\n\n    const chartData = {\n      labels: chartLabels,\n      datasets: [\n        {\n          label: chartDatasetsLabel,\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(97, 218, 251,0.4)',\n          borderColor: 'rgba(97, 218, 251,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(97, 218, 251,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(97, 218, 251,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: chartDatasetsData,\n        }\n      ]\n    };\n\n    return chartData;\n  };\n\n  render() {\n    const mockedCoinApiData = [\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 345,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 123,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-04-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 987,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-06-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 760,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-05-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 349,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-07-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 333,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000Z\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342Z\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 444,\n        \"bid_size\": 124\n      },\n      {\n        \"symbol_id\": \"BITSTAMP_SPOT_BTC_USD\",\n        \"time_exchange\": \"2013-09-28T22:40:50.0000000\",\n        \"time_coinapi\": \"2017-03-18T22:42:21.3763342\",\n        \"ask_price\": 770.000000000,\n        \"ask_size\": 3252,\n        \"bid_price\": 567,\n        \"bid_size\": 124\n      }\n    ];\n    return (\n      <div>\n        <MainPageView chartData={this.getChartData(mockedCoinApiData)}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    coinApiData: getCoinApiData(state),\n  }),\n  { setCoinApiRequest }\n)(MainPage);","import React, { Component } from 'react';\nimport store from './modules';\nimport { Provider } from 'react-redux';\n\nimport MainPage from './containers/MainPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MainPage />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}